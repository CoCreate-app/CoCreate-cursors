/*! For license information please see toggle-chunk.js.LICENSE.txt */
(this.webpackChunkCoCreate_cursors=this.webpackChunkCoCreate_cursors||[]).push([["toggle-chunk"],{"../CoCreate-toggle/src/index.js":(__unused_webpack_module,exports)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\nconst CoCreateToggle = {\n  init: function () {\n    this.initElement(document, 'toggle');\n    this.initElement(document, 'hover');\n  },\n  initElement: function (container, prefix) {\n    this.__initElementEvent(container || document, prefix);\n  },\n  __initElementEvent: function (mainContainer, prefix) {\n    const self = this;\n    let eventNames = [];\n    if (prefix === 'toggle') eventNames = ['click'];\n    if (prefix === 'hover') eventNames = ['mouseover', 'mouseout'];\n    eventNames.forEach(event_name => {\n      mainContainer.addEventListener(event_name, function (event) {\n        const target = event.target.closest(`[data-${prefix}]`);\n\n        if (target) {\n          self.__changeElementStatus(target, prefix);\n        }\n      });\n    });\n  },\n  __changeElementStatus: function (element, prefix) {\n    const self = this;\n    let values = element.dataset[prefix].split(',');\n\n    if (!values || values.length == 0) {\n      return;\n    }\n\n    let target_attribute = element.dataset[`${prefix}_attribute`] || 'class';\n    let targetSelector = element.dataset[`${prefix}_target`];\n    let targetClosest = element.dataset[`${prefix}_closest`];\n    let targetElements = [element];\n\n    if (typeof targetClosest != 'undefined') {\n      targetElements = [element.closest(targetClosest)];\n    }\n\n    if (targetSelector) {\n      targetElements = document.querySelectorAll(targetSelector);\n    }\n\n    values = values.map(x => x.trim());\n    targetElements.forEach(el => self.setValue(el, target_attribute, values));\n  },\n  setValue: function (element, attrName, values) {\n    if (element.getAttribute(attrName) === null) {\n      return;\n    }\n\n    let attrValues = element.getAttribute(attrName).split(' ').map(x => x.trim());\n    let oldValue = values.filter(x => attrValues.includes(x))[0] || '';\n\n    let newValue = this.__getNextValue(values, oldValue);\n\n    if (attrName === 'class') {\n      if (oldValue != '') {\n        element.classList.remove(oldValue);\n\n        if (values.length === 1) {\n          return;\n        }\n      }\n\n      if (newValue != '') {\n        element.classList.add(newValue);\n      }\n    } else {\n      element.setAttribute(attrName, newValue);\n    }\n  },\n  __getNextValue: function (values, val) {\n    let size = values.length;\n    let nn = values.indexOf(val);\n\n    if (nn == -1) {\n      return values[0];\n    } else {\n      return values[(nn + 1) % size];\n    }\n  }\n};\nCoCreateToggle.init();\nvar _default = CoCreateToggle;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-toggle/src/index.js\n")}}]);