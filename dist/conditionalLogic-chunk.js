/*! For license information please see conditionalLogic-chunk.js.LICENSE.txt */
(this.webpackChunkCoCreate_cursors=this.webpackChunkCoCreate_cursors||[]).push([["conditionalLogic-chunk"],{"../CoCreate-conditional-logic/src/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _observer = _interopRequireDefault(__webpack_require__(/*! @cocreate/observer */ \"../CoCreate-observer/src/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*!\n * https://cocreate.app\n * https://github.com/CoCreate-app/Conditional_Logic\n * Released under the MIT license\n * https://github.com/CoCreate-app/Conditional_Logic/blob/master/LICENSE\n */\ninitShowHideEles();\ndocument.addEventListener('fetchedTemplate', () => {\n  initShowHideEles();\n}); //. cocreate init section\n\nfunction initShowHideEles(container) {\n  let mainContainer = container || document;\n\n  if (!mainContainer.querySelectorAll) {\n    return;\n  }\n\n  let elements = mainContainer.querySelectorAll(`[data-show],[data-hide]`);\n\n  if (elements.length === 0 && mainContainer != document && (mainContainer.hasAttribute(`[data-show]`) || mainContainer.hasAttributes(\"[data-hide\"))) {\n    elements = [mainContainer];\n  }\n\n  for (let el of elements) {\n    if (_observer.default.getInitialized(el, \"conditional-logic\")) {\n      return;\n    }\n\n    _observer.default.setInitialized(el, \"conditional-logic\");\n\n    if (el.tagName.toLowerCase() == \"option\") el = el.closest('select');\n    el.removeEventListener('change', selectShowHideEle);\n    el.removeEventListener(\"click\", clickShowHideEle);\n    el.addEventListener(\"change\", selectShowHideEle);\n    el.addEventListener(\"click\", clickShowHideEle);\n  }\n} // CoCreateInit.register('CoCreateConditionalLogic', window, window.initShowHideEles);\n\n\n_observer.default.init({\n  name: 'CoCreateConditionalLogic',\n  observe: ['subtree', 'childList'],\n  include: '[data-show],[data-hide]',\n  callback: function (mutation) {\n    initShowHideEles(mutation.target);\n  }\n}); //. upgrade by jin (using document event)\n// function initShowHideEles() {\n// \tconst selector = \"[data-show],[data-hide]\";\n// \tdocument.removeEventListener(\"change\", function(event) {\n// \t\tconst target = event.target.closest(selector);\n// \t\tif (target) {\n// \t\t\tselectShowHideEle(event)\n// \t\t}\n// \t});\n// \tdocument.removeEventListener(\"click\", function(event) {\n// \t\tconst target = event.target.closest(selector);\n// \t\tif (target) {\n// \t\t\tclickShowHideEle(event)\n// \t\t}\n// \t});\n// \tdocument.addEventListener(\"change\", function(event) {\n// \t\tconst target = event.target.closest(selector);\n// \t\tif (target) {\n// \t\t\tselectShowHideEle(event)\n// \t\t}\n// \t});\n// \t\tdocument.addEventListener(\"click\", function(event) {\n// \t\tconst target = event.target.closest(selector);\n// \t\tif (target) {\n// \t\t\tclickShowHideEle(event)\n// \t\t}\n// \t});\n// }\n\n\nfunction selectShowHideEle(e) {\n  console.log(this, 'select');\n  e.preventDefault();\n  var select = this;\n  if (typeof select.options != 'undefined') for (var i = 0, len = select.options.length; i < len; i++) {\n    var opt = select.options[i];\n    var value = opt.value;\n\n    if (value != '') {\n      var show = opt.dataset.show; // var show_class = opt.dataset.showClass\n\n      if (typeof show != 'undefined') {\n        for (let el of document.querySelectorAll(show)) el.classList.add('hidden');\n\n        if (opt.selected === true) {\n          for (let el of document.querySelectorAll(show)) el.classList.remove('hidden');\n        }\n      }\n    } //end value is not empty\n\n  } //end for\n}\n\nfunction clickShowHideEle(e) {\n  console.log(this, 'click');\n  var show = this.dataset.show;\n  var hide = this.dataset.hide;\n  let tagName = this.tagName.toLowerCase();\n\n  if (tagName == 'input' && this.getAttribute(\"type\").toLowerCase() == 'radio') {\n    let name = this.getAttribute(\"name\");\n    let radios = document.querySelectorAll(tagName + '[name=\"' + name + '\"]');\n\n    for (let radio of radios) {\n      show = radio.dataset.show;\n\n      for (let el of document.querySelectorAll(show)) {\n        el.classList.add('hidden');\n      }\n\n      if (radio.checked) {\n        for (let el of document.querySelectorAll(show)) el.classList.remove('hidden');\n      }\n    }\n  } else {\n    let updated_els = [];\n\n    for (let el of document.querySelectorAll(show)) {\n      if (el.classList.contains('hidden')) {\n        el.classList.remove('hidden');\n        updated_els.push(el);\n      }\n    }\n\n    for (let el of document.querySelectorAll(hide)) {\n      let existEqual = false;\n\n      for (let uel of updated_els) {\n        if (el.isEqualNode(uel)) {\n          existEqual = true;\n          break;\n        }\n      }\n\n      if (!existEqual) el.classList.add('hidden');\n    }\n  }\n}\n\nconst CoCreateConditionalLogic = {\n  initShowHideEles,\n  selectShowHideEle,\n  clickShowHideEle\n};\nvar _default = CoCreateConditionalLogic;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-conditional-logic/src/index.js\n")}}]);