/*! For license information please see modal-chunk.js.LICENSE.txt */
(this.webpackChunkCoCreate_cursors=this.webpackChunkCoCreate_cursors||[]).push([["modal-chunk"],{"../CoCreate-modal/src/container.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _modal = _interopRequireDefault(__webpack_require__(/*! ./modal.js */ \"../CoCreate-modal/src/modal.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ModalContainer(el) {\n  this.modals = [];\n  this.el = el;\n  this.modalClass = this.el.getAttribute(\"data-modal-class\");\n  this.SELECT_ZINDEX = 10;\n  this.UNSELECT_ZINDEX = 2;\n  this.ghostEl = null;\n  this.width = 0;\n  this.height = 0;\n  this.selectedModal = null;\n\n  if (!this.modalClass) {\n    this.modalClass = \"modal\";\n  }\n\n  this._createGhost(this.el.getAttribute(\"data-ghost-class\"));\n\n  this._initModals();\n\n  this._initEvent();\n}\n\nModalContainer.prototype = {\n  _createGhost: function (ghostClass) {\n    var node = document.createElement(\"div\");\n\n    if (!ghostClass) {\n      ghostClass = \"modal-ghost\";\n    }\n\n    node.classList.add(ghostClass);\n    this.el.appendChild(node);\n    this.ghostEl = node;\n  },\n  _initModals: function () {\n    var el_children = document.querySelectorAll(\".\" + this.modalClass);\n\n    for (var i = 0; i < el_children.length; i++) {\n      this.modals.push(new _modal.default(el_children[i], {}, this.el));\n    }\n\n    if (!this.selectedModal) {\n      this._selectModal(this.modals[this.modals.length - 1]);\n    }\n  },\n  _initEvent: function () {\n    let _this = this;\n\n    this.el.addEventListener('mousemove', function (e) {\n      e.preventDefault();\n\n      if (_this.selectedModal) {\n        _this.selectedModal._onMove(e);\n      }\n    });\n    this.el.addEventListener('mouseup', function (e) {\n      if (_this.selectedModal) {\n        _this.selectedModal._onUp(e);\n      }\n\n      e.preventDefault();\n    }, true);\n    this.el.addEventListener('touchmove', function (e) {\n      // e.preventDefault();\n      if (_this.selectedModal) {\n        _this.selectedModal._onMove(e.touches[0]);\n      }\n    });\n    this.el.addEventListener('touchend', function (e) {\n      // e.preventDefault();\n      if (_this.selectedModal) {\n        _this.selectedModal._onUp(e.touches[0]);\n      }\n    });\n    this.el.addEventListener('cocreate-selectmodal', function (e) {\n      if (_this.selectedModal) {\n        _this._selectModal(e.detail.modal);\n      }\n    });\n    this.el.addEventListener('cocreate-modalghost', function (e) {\n      if (_this.selectedModal) {\n        _this._ghostProcess(e.detail);\n      }\n    });\n    this.el.addEventListener('cocreate-removemodal', function (e) {\n      if (_this.selectedModal) {\n        _this._removeModal(e.detail.modal);\n      }\n    });\n\n    this._initResizeEvent();\n  },\n  _initResizeEvent: function () {\n    var _this = this;\n\n    var bound = this.el.getBoundingClientRect();\n    this.width = bound.width;\n    this.height = bound.height;\n    let ro = new ResizeObserver((entries, observer) => {\n      let contentRect = entries[0].contentRect;\n\n      _this._resizeProcess(_this.width, _this.height, contentRect.width, contentRect.height);\n    });\n    ro.observe(this.el);\n  },\n\n  _resizeProcess(prevWidth, prevHeight, width, height) {\n    this.width = width;\n    this.height = height;\n\n    if (prevWidth == width && prevHeight == height) {\n      return;\n    }\n\n    let dx = width - prevWidth;\n    let dy = height - prevHeight;\n\n    for (var i = 0; i < this.modals.length; i++) {\n      this.modals[i].resize(dx, dy, width, height);\n    }\n  },\n\n  _createModal: function (attr) {\n    var node = document.createElement(\"div\");\n    node.classList.add(this.modalClass);\n    node.style.zIndex = this.SELECT_ZINDEX;\n    this.el.appendChild(node);\n    var modal = new _modal.default(node, attr, this.el);\n    this.modals.push(modal);\n\n    this._selectModal(node);\n  },\n  _releaseSelect: function () {\n    if (!this.selectedModal) {\n      return;\n    }\n\n    this.selectedModal.el.style.zIndex = this.UNSELECT_ZINDEX;\n    this.selectedModal.el.classList.remove(\"modal_selected\");\n    this.selectedModal = null;\n  },\n  _selectModal: function (el) {\n    let modal = this._findModalByElement(el);\n\n    if (modal == this.selectedModal) {\n      return;\n    }\n\n    this._releaseSelect();\n\n    this.selectedModal = modal;\n\n    if (this.selectedModal) {\n      this.selectedModal.el.style.zIndex = this.SELECT_ZINDEX;\n      this.selectedModal.el.classList.add('modal_selected');\n      this.ghostEl.style.width = 0;\n      this.ghostEl.style.height = 0;\n    }\n  },\n  _findModalByElement: function (el) {\n    if (el instanceof _modal.default) {\n      return el;\n    }\n\n    for (var i = 0; i < this.modals.length; i++) {\n      if (this.modals[i].el.isEqualNode(el)) {\n        return this.modals[i];\n      }\n    }\n\n    return null;\n  },\n  getModalById: function (id) {\n    for (var i = 0; i < this.modals.length; i++) {\n      if (this.modals[i].id == id) {\n        return this.modals[i];\n      }\n    }\n\n    return null;\n  },\n  _ghostProcess: function (info) {\n    this.ghostEl.style.left = info.x + 'px';\n    this.ghostEl.style.top = info.y + 'px';\n    this.ghostEl.style.width = info.w + 'px';\n    this.ghostEl.style.height = info.h + 'px';\n\n    if (info.type === \"show\") {\n      if (this.ghostEl.style.display === 'none') {\n        this.ghostEl.style.display = 'block';\n      }\n\n      this.ghostEl.style.opacity = 0.2;\n    } else {\n      this.ghostEl.style.opacity = 0;\n\n      if (this.ghostEl.style.display !== 'none') {\n        this.ghostEl.style.display = 'none';\n      }\n    }\n\n    return;\n  },\n  _removeModal: function (modal) {\n    for (var i = 0; i < this.modals.length; i++) {\n      if (this.modals[i] === modal) {\n        this.el.removeChild(modal.el);\n        this.modals.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.modals.length > 0) {\n      this._selectModal(this.modals[this.modals.length - 1]);\n    } else {\n      this.selectedModal = null;\n    }\n\n    this.el.style.pointerEvents = \"none\";\n  }\n};\nvar _default = ModalContainer;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-modal/src/container.js\n")},"../CoCreate-modal/src/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _container = _interopRequireDefault(__webpack_require__(/*! ./container.js */ \"../CoCreate-modal/src/container.js\"));\n\nvar _utils = __webpack_require__(/*! ./utils.js */ \"../CoCreate-modal/src/utils.js\");\n\nvar _observer = _interopRequireDefault(__webpack_require__(/*! @cocreate/observer */ \"../CoCreate-observer/src/index.js\"));\n\nvar _utils2 = _interopRequireDefault(__webpack_require__(/*! @cocreate/utils */ \"../CoCreate-utils/src/index.js\"));\n\nvar _message = _interopRequireDefault(__webpack_require__(/*! @cocreate/message */ \"../CoCreate-message/src/index.js\"));\n\n__webpack_require__(/*! ./CoCreate-modal.css */ \"../CoCreate-modal/src/CoCreate-modal.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction CoCreateWindow(id) {\n  let container_id = id ? id : 'modal-viewport';\n  this.container = null;\n  this.id = container_id;\n  this.pageId = (0, _utils.generateUUID)(20);\n  this.isRoot = this._checkRoot();\n\n  if (!this.isRoot) {\n    this.parentId = _utils.ModalStorage.parentPageId;\n    this.pageId = _utils.ModalStorage.pageId;\n    this.rootId = _utils.ModalStorage.rootPageId;\n  } else {\n    _utils.ModalStorage.rootPageId = this.pageId;\n    this.rootId = this.pageId;\n    this.parentId = this.pageId;\n  }\n\n  this._createContainer();\n\n  this._initWndButtons();\n\n  this._initSocket(); //. set parent_id and page_id for test \n\n\n  var html = document.querySelector(\"html\");\n  html.setAttribute(\"test-parent_id\", this.parentId);\n  html.setAttribute(\"test-page_id\", this.pageId);\n}\n\nCoCreateWindow.prototype = {\n  _checkRoot: function () {\n    try {\n      return window.self === window.top;\n    } catch (e) {\n      return false;\n    }\n  },\n  _createContainer: function () {\n    if (this.container) return true;\n    var el = document.getElementById(this.id);\n\n    if (el) {\n      this.container = new _container.default(el);\n      return true;\n    } else {\n      return false;\n    }\n  },\n  _initWndButtons: function () {\n    var closeBtns = document.querySelectorAll('.btn-modal-close');\n    var minmaxBtn = document.querySelector('.btn-modal-maximize');\n    var parkBtn = document.querySelector('.btn-modal-minimize');\n\n    var _this = this;\n\n    if (closeBtns.length > 0) {\n      for (var i = 0; i < closeBtns.length; i++) {\n        var closeBtn = closeBtns[i];\n        closeBtn.addEventListener('click', function (e) {\n          e.preventDefault();\n\n          _this.sendWindowBtnEvent('close');\n        });\n      }\n    }\n\n    if (minmaxBtn) {\n      minmaxBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        _this.sendWindowBtnEvent('maximize'); // let state = this.getAttribute('data-state');\n        // if (state == 'min') {\n        //   _this.sendWindowBtnEvent('minimize');\n        //   this.setAttribute('data-state', 'max');\n        // } else {\n        //   _this.sendWindowBtnEvent('maximize');\n        //   this.setAttribute('data-state', 'min');\n        // }\n\n      });\n    }\n\n    if (parkBtn) {\n      parkBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        _this.sendWindowBtnEvent('park');\n      });\n    }\n  },\n  sendWindowBtnEvent: function (type) {\n    var json = {\n      \"apiKey\": config.apiKey,\n      \"securityKey\": config.securityKey,\n      \"organization_id\": config.organization_Id,\n      \"data\": {\n        \"parentId\": this.parentId,\n        \"pageId\": this.pageId,\n        \"type\": type,\n        \"author\": \"jin\"\n      }\n    };\n\n    _message.default.send('windowBtnEvent', json);\n  },\n  _initSocket: function () {\n    var _this = this;\n\n    _message.default.listen('openWindow', function (data) {\n      if (data.parentId == _this.pageId) {\n        _this.container._createModal(data);\n      } // if (data.parentId == _this.pageId) {\n      //   _this.container._createModal(data);\n      // }\n\n    }), _message.default.listen('windowBtnEvent', function (data) {\n      if (data.parentId == _this.pageId) {\n        var pageId = data.pageId;\n        var type = data.type;\n\n        var modal = _this.container.getModalById(pageId);\n\n        if (modal) {\n          switch (type) {\n            case 'close':\n              _this.container._removeModal(modal);\n\n              break;\n\n            case 'maximize':\n              // minimizeWindow(w);\n              modal._setMaximize();\n\n              break;\n\n            case 'park':\n              modal.togglePark();\n              break;\n\n            default:\n          }\n        }\n      }\n    });\n  },\n  open: function (aTag) {\n    this.openWindow(aTag);\n  },\n  openWindow: function (aTag) {\n    var attr = {\n      url: aTag.getAttribute('href'),\n      x: aTag.getAttribute('data-modal_x'),\n      y: aTag.getAttribute('data-modal_y'),\n      width: aTag.getAttribute('data-modal_width'),\n      height: aTag.getAttribute('data-modal_height'),\n      ajax: aTag.getAttribute('data-modal_ajax'),\n      color: aTag.getAttribute('data-modal_color'),\n      header: aTag.getAttribute('data-modal_header') ? aTag.getAttribute('data-modal_header') : \"true\",\n      attributes: _utils2.default.getAttributes(aTag)\n    };\n    var open_type = aTag.getAttribute('data-modal_open');\n    open_type = open_type ? open_type : 'root';\n    _utils.ModalStorage.rootPageId = this.rootId;\n    var open_id = open_type; // if (this.isRoot) {\n    //   ModalStorage.parentPageId = this.pageId;\n    // } else {\n\n    switch (open_type) {\n      case 'parent':\n        open_id = this.parentId;\n        break;\n\n      case 'page':\n        open_id = this.pageId;\n        break;\n\n      case 'root':\n        open_id = this.rootId;\n        break;\n\n      default:\n        open_id = open_type;\n        break;\n      // code\n    }\n\n    _utils.ModalStorage.parentPageId = open_id;\n    attr.parentId = open_id; // }\n\n    if (this.isRoot) {\n      if (this._createContainer()) {\n        this.container._createModal(attr);\n      }\n    } else {\n      // attr.parentId = this.parentId;\n      _message.default.send('openWindow', {\n        \"apiKey\": config.apiKey,\n        \"securityKey\": config.securityKey,\n        \"organization_id\": config.organization_Id,\n        data: attr\n      });\n    }\n  }\n};\nlet CoCreateModal = new CoCreateWindow();\nvar _default = CoCreateModal;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5jdXJzb3JzLy4uL0NvQ3JlYXRlLW1vZGFsL3NyYy9pbmRleC5qcz9mOGZjIl0sIm5hbWVzIjpbIkNvQ3JlYXRlV2luZG93IiwiaWQiLCJjb250YWluZXJfaWQiLCJjb250YWluZXIiLCJwYWdlSWQiLCJpc1Jvb3QiLCJfY2hlY2tSb290IiwicGFyZW50SWQiLCJNb2RhbFN0b3JhZ2UiLCJwYXJlbnRQYWdlSWQiLCJyb290SWQiLCJyb290UGFnZUlkIiwiX2NyZWF0ZUNvbnRhaW5lciIsIl9pbml0V25kQnV0dG9ucyIsIl9pbml0U29ja2V0IiwiaHRtbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInNldEF0dHJpYnV0ZSIsInByb3RvdHlwZSIsIndpbmRvdyIsInNlbGYiLCJ0b3AiLCJlIiwiZWwiLCJnZXRFbGVtZW50QnlJZCIsIk1vZGFsQ29udGFpbmVyIiwiY2xvc2VCdG5zIiwicXVlcnlTZWxlY3RvckFsbCIsIm1pbm1heEJ0biIsInBhcmtCdG4iLCJfdGhpcyIsImxlbmd0aCIsImkiLCJjbG9zZUJ0biIsImFkZEV2ZW50TGlzdGVuZXIiLCJwcmV2ZW50RGVmYXVsdCIsInNlbmRXaW5kb3dCdG5FdmVudCIsInR5cGUiLCJqc29uIiwiY29uZmlnIiwiYXBpS2V5Iiwic2VjdXJpdHlLZXkiLCJvcmdhbml6YXRpb25fSWQiLCJtZXNzYWdlIiwic2VuZCIsImxpc3RlbiIsImRhdGEiLCJfY3JlYXRlTW9kYWwiLCJtb2RhbCIsImdldE1vZGFsQnlJZCIsIl9yZW1vdmVNb2RhbCIsIl9zZXRNYXhpbWl6ZSIsInRvZ2dsZVBhcmsiLCJvcGVuIiwiYVRhZyIsIm9wZW5XaW5kb3ciLCJhdHRyIiwidXJsIiwiZ2V0QXR0cmlidXRlIiwieCIsInkiLCJ3aWR0aCIsImhlaWdodCIsImFqYXgiLCJjb2xvciIsImhlYWRlciIsImF0dHJpYnV0ZXMiLCJ1dGlscyIsImdldEF0dHJpYnV0ZXMiLCJvcGVuX3R5cGUiLCJvcGVuX2lk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O0FBQ3pCLGtCQUFVTCxNQUFNLENBQUNDLE1BRFE7QUFFekIsdUJBQWVELE1BQU0sQ0FBQ0UsV0FGRztBQUd6QiwyQkFBbUJGLE1BQU0sQ0FBQ0csZUFIRDtBQUl4QkksWUFBSSxFQUFFVTtBQUprQixPQUEzQjtBQU1EO0FBQ0Y7QUEvS3dCLENBQTNCO0FBa0xBLElBQUllLGFBQWEsR0FBRyxJQUFJeEUsY0FBSixFQUFwQjtlQUVld0UsYSIsImZpbGUiOiIuLi9Db0NyZWF0ZS1tb2RhbC9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTW9kYWxDb250YWluZXIgZnJvbSBcIi4vY29udGFpbmVyLmpzXCJcbmltcG9ydCB7IGdlbmVyYXRlVVVJRCwgTW9kYWxTdG9yYWdlIH0gZnJvbSBcIi4vdXRpbHMuanNcIlxuaW1wb3J0IG9ic2VydmVyIGZyb20gJ0Bjb2NyZWF0ZS9vYnNlcnZlcic7XG5pbXBvcnQgdXRpbHMgZnJvbSAnQGNvY3JlYXRlL3V0aWxzJztcbmltcG9ydCBtZXNzYWdlIGZyb20gJ0Bjb2NyZWF0ZS9tZXNzYWdlJztcbmltcG9ydCAnLi9Db0NyZWF0ZS1tb2RhbC5jc3MnO1xuXG5mdW5jdGlvbiBDb0NyZWF0ZVdpbmRvdyhpZCkge1xuICBsZXQgY29udGFpbmVyX2lkID0gKGlkKSA/IGlkIDogJ21vZGFsLXZpZXdwb3J0JztcbiAgdGhpcy5jb250YWluZXIgPSBudWxsO1xuICB0aGlzLmlkID0gY29udGFpbmVyX2lkO1xuICBcbiAgdGhpcy5wYWdlSWQgPSBnZW5lcmF0ZVVVSUQoMjApO1xuICB0aGlzLmlzUm9vdCA9IHRoaXMuX2NoZWNrUm9vdCgpO1xuICBcbiAgXG4gIGlmICghdGhpcy5pc1Jvb3QpIHtcbiAgICB0aGlzLnBhcmVudElkID0gTW9kYWxTdG9yYWdlLnBhcmVudFBhZ2VJZDtcbiAgICB0aGlzLnBhZ2VJZCA9IE1vZGFsU3RvcmFnZS5wYWdlSWQ7XG4gICAgdGhpcy5yb290SWQgPSBNb2RhbFN0b3JhZ2Uucm9vdFBhZ2VJZDtcbiAgfSBlbHNlIHtcbiAgICBNb2RhbFN0b3JhZ2Uucm9vdFBhZ2VJZCA9IHRoaXMucGFnZUlkO1xuICAgIHRoaXMucm9vdElkID0gdGhpcy5wYWdlSWQ7XG4gICAgdGhpcy5wYXJlbnRJZCA9IHRoaXMucGFnZUlkO1xuICB9XG4gIFxuICB0aGlzLl9jcmVhdGVDb250YWluZXIoKTtcbiAgdGhpcy5faW5pdFduZEJ1dHRvbnMoKTtcbiAgXG4gIHRoaXMuX2luaXRTb2NrZXQoKTtcbiAgXG4gIC8vLiBzZXQgcGFyZW50X2lkIGFuZCBwYWdlX2lkIGZvciB0ZXN0IFxuICBcbiAgdmFyIGh0bWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaHRtbFwiKTtcbiAgaHRtbC5zZXRBdHRyaWJ1dGUoXCJ0ZXN0LXBhcmVudF9pZFwiLCB0aGlzLnBhcmVudElkKTtcbiAgaHRtbC5zZXRBdHRyaWJ1dGUoXCJ0ZXN0LXBhZ2VfaWRcIiwgdGhpcy5wYWdlSWQpO1xufVxuXG5Db0NyZWF0ZVdpbmRvdy5wcm90b3R5cGUgPSB7XG4gIF9jaGVja1Jvb3Q6IGZ1bmN0aW9uKCkge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuc2VsZiA9PT0gd2luZG93LnRvcDtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0sXG4gIF9jcmVhdGVDb250YWluZXI6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLmNvbnRhaW5lcikgcmV0dXJuIHRydWU7XG5cbiAgICB2YXIgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmlkKTtcbiAgICBpZiAoZWwpIHtcbiAgICAgIHRoaXMuY29udGFpbmVyID0gbmV3IE1vZGFsQ29udGFpbmVyKGVsKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9LFxuXG4gIF9pbml0V25kQnV0dG9uczogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGNsb3NlQnRucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5idG4tbW9kYWwtY2xvc2UnKTtcbiAgICB2YXIgbWlubWF4QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ0bi1tb2RhbC1tYXhpbWl6ZScpO1xuICAgIHZhciBwYXJrQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ0bi1tb2RhbC1taW5pbWl6ZScpO1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgXG4gICAgaWYgKGNsb3NlQnRucy5sZW5ndGggPiAwKSB7XG4gICAgICBmb3IgKHZhciBpPTA7IGkgPCBjbG9zZUJ0bnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGNsb3NlQnRuID0gY2xvc2VCdG5zW2ldO1xuICAgICAgICBjbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgX3RoaXMuc2VuZFdpbmRvd0J0bkV2ZW50KCdjbG9zZScpO1xuICAgICAgICB9KSAgXG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGlmIChtaW5tYXhCdG4pIHtcbiAgICAgIG1pbm1heEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBfdGhpcy5zZW5kV2luZG93QnRuRXZlbnQoJ21heGltaXplJyk7XG4gICAgICAgIC8vIGxldCBzdGF0ZSA9IHRoaXMuZ2V0QXR0cmlidXRlKCdkYXRhLXN0YXRlJyk7XG4gICAgICAgIFxuICAgICAgICAvLyBpZiAoc3RhdGUgPT0gJ21pbicpIHtcbiAgICAgICAgLy8gICBfdGhpcy5zZW5kV2luZG93QnRuRXZlbnQoJ21pbmltaXplJyk7XG4gICAgICAgIC8vICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3RhdGUnLCAnbWF4Jyk7XG4gICAgICAgIC8vIH0gZWxzZSB7XG4gICAgICAgIC8vICAgX3RoaXMuc2VuZFdpbmRvd0J0bkV2ZW50KCdtYXhpbWl6ZScpO1xuICAgICAgICAvLyAgIHRoaXMuc2V0QXR0cmlidXRlKCdkYXRhLXN0YXRlJywgJ21pbicpO1xuICAgICAgICAvLyB9XG4gICAgICB9KVxuICAgIH1cbiAgICBcbiAgICBpZiAocGFya0J0bikge1xuICAgICAgcGFya0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBfdGhpcy5zZW5kV2luZG93QnRuRXZlbnQoJ3BhcmsnKTtcbiAgICAgIH0pXG4gICAgfVxuICB9LFxuICBcbiAgc2VuZFdpbmRvd0J0bkV2ZW50OiBmdW5jdGlvbih0eXBlKSB7XG4gICAgdmFyIGpzb24gPSB7XG4gICAgICBcImFwaUtleVwiOiBjb25maWcuYXBpS2V5LFxuICAgICAgXCJzZWN1cml0eUtleVwiOiBjb25maWcuc2VjdXJpdHlLZXksXG4gICAgICBcIm9yZ2FuaXphdGlvbl9pZFwiOiBjb25maWcub3JnYW5pemF0aW9uX0lkLFxuICAgICAgXCJkYXRhXCI6IHtcbiAgICAgICAgXCJwYXJlbnRJZFwiOiB0aGlzLnBhcmVudElkLFxuICAgICAgICBcInBhZ2VJZFwiOiB0aGlzLnBhZ2VJZCxcbiAgICAgICAgXCJ0eXBlXCI6IHR5cGUsXG4gICAgICAgIFwiYXV0aG9yXCI6IFwiamluXCJcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZXNzYWdlLnNlbmQoJ3dpbmRvd0J0bkV2ZW50JywganNvbik7XG4gIH0sXG4gIFxuICBfaW5pdFNvY2tldDogZnVuY3Rpb24oKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcbiAgICBtZXNzYWdlLmxpc3Rlbignb3BlbldpbmRvdycsIGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIGlmIChkYXRhLnBhcmVudElkID09IF90aGlzLnBhZ2VJZCkge1xuICAgICAgICBfdGhpcy5jb250YWluZXIuX2NyZWF0ZU1vZGFsKGRhdGEpO1xuICAgICAgfVxuICAgICAgLy8gaWYgKGRhdGEucGFyZW50SWQgPT0gX3RoaXMucGFnZUlkKSB7XG4gICAgICAvLyAgIF90aGlzLmNvbnRhaW5lci5fY3JlYXRlTW9kYWwoZGF0YSk7XG4gICAgICAvLyB9XG4gICAgfSksXG4gICAgXG4gICAgbWVzc2FnZS5saXN0ZW4oJ3dpbmRvd0J0bkV2ZW50JywgZnVuY3Rpb24oZGF0YSkge1xuICAgICAgaWYgKGRhdGEucGFyZW50SWQgPT0gX3RoaXMucGFnZUlkKSB7XG4gICAgICAgIFxuICAgICAgICB2YXIgcGFnZUlkID0gZGF0YS5wYWdlSWQ7XG4gICAgICAgIHZhciB0eXBlID0gZGF0YS50eXBlO1xuICAgICAgICBcbiAgICAgICAgdmFyIG1vZGFsID0gX3RoaXMuY29udGFpbmVyLmdldE1vZGFsQnlJZChwYWdlSWQpO1xuICAgICAgICBcbiAgICAgICAgaWYgKG1vZGFsKSB7XG4gICAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICBjYXNlICdjbG9zZSc6XG4gICAgICAgICAgICAgICBfdGhpcy5jb250YWluZXIuX3JlbW92ZU1vZGFsKG1vZGFsKVxuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ21heGltaXplJzpcbiAgICAgICAgICAgICAgLy8gbWluaW1pemVXaW5kb3codyk7XG4gICAgICAgICAgICAgIG1vZGFsLl9zZXRNYXhpbWl6ZSgpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3BhcmsnOlxuICAgICAgICAgICAgICBtb2RhbC50b2dnbGVQYXJrKCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB9ICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgfSxcbiAgXG4gIG9wZW46IGZ1bmN0aW9uKGFUYWcpIHtcbiAgICB0aGlzLm9wZW5XaW5kb3coYVRhZyk7XG4gIH0sXG4gICBcbiAgb3BlbldpbmRvdzogZnVuY3Rpb24oYVRhZykge1xuICAgIFxuICAgIHZhciBhdHRyID0ge1xuICAgICAgdXJsOiAgICBhVGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpLFxuICAgICAgeDogICAgICBhVGFnLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RhbF94JyksXG4gICAgICB5OiAgICAgIGFUYWcuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGFsX3knKSxcbiAgICAgIHdpZHRoOiAgYVRhZy5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWxfd2lkdGgnKSxcbiAgICAgIGhlaWdodDogYVRhZy5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWxfaGVpZ2h0JyksXG4gICAgICBhamF4OiAgIGFUYWcuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGFsX2FqYXgnKSxcbiAgICAgIGNvbG9yOiAgYVRhZy5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWxfY29sb3InKSxcbiAgICAgIGhlYWRlcjogYVRhZy5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWxfaGVhZGVyJykgPyBhVGFnLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RhbF9oZWFkZXInKTogXCJ0cnVlXCIsIFxuICAgICAgXG4gICAgICBhdHRyaWJ1dGVzOiB1dGlscy5nZXRBdHRyaWJ1dGVzKGFUYWcpXG4gICAgfVxuICAgIFxuICAgIHZhciBvcGVuX3R5cGUgPSBhVGFnLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RhbF9vcGVuJyk7XG4gICAgb3Blbl90eXBlID0gb3Blbl90eXBlID8gb3Blbl90eXBlIDogJ3Jvb3QnO1xuICAgIFxuICAgIE1vZGFsU3RvcmFnZS5yb290UGFnZUlkID0gdGhpcy5yb290SWQ7XG4gICAgXG4gICAgdmFyIG9wZW5faWQgPSBvcGVuX3R5cGU7XG4gICAgLy8gaWYgKHRoaXMuaXNSb290KSB7XG4gICAgLy8gICBNb2RhbFN0b3JhZ2UucGFyZW50UGFnZUlkID0gdGhpcy5wYWdlSWQ7XG4gICAgLy8gfSBlbHNlIHtcbiAgICAgIHN3aXRjaCAob3Blbl90eXBlKSB7XG4gICAgICAgIGNhc2UgJ3BhcmVudCc6XG4gICAgICAgICAgb3Blbl9pZCA9IHRoaXMucGFyZW50SWQ7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3BhZ2UnOlxuICAgICAgICAgIG9wZW5faWQgPSB0aGlzLnBhZ2VJZDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncm9vdCc6XG4gICAgICAgICAgb3Blbl9pZCA9IHRoaXMucm9vdElkO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIG9wZW5faWQgPSBvcGVuX3R5cGU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgLy8gY29kZVxuICAgICAgfVxuICAgIE1vZGFsU3RvcmFnZS5wYXJlbnRQYWdlSWQgPSBvcGVuX2lkO1xuICAgIFxuICAgIGF0dHIucGFyZW50SWQgPSBvcGVuX2lkO1xuICAgIC8vIH1cbiAgICBcbiAgICBpZiAodGhpcy5pc1Jvb3QpIHtcbiAgICAgIGlmICh0aGlzLl9jcmVhdGVDb250YWluZXIoKSkge1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5fY3JlYXRlTW9kYWwoYXR0cik7ICBcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gYXR0ci5wYXJlbnRJZCA9IHRoaXMucGFyZW50SWQ7XG4gICAgICBtZXNzYWdlLnNlbmQoJ29wZW5XaW5kb3cnLCB7XG4gICAgICAgIFwiYXBpS2V5XCI6IGNvbmZpZy5hcGlLZXksXG4gICAgICAgIFwic2VjdXJpdHlLZXlcIjogY29uZmlnLnNlY3VyaXR5S2V5LFxuICAgICAgICBcIm9yZ2FuaXphdGlvbl9pZFwiOiBjb25maWcub3JnYW5pemF0aW9uX0lkLFxuICAgICAgICAgZGF0YTogYXR0clxuICAgICAgfSlcbiAgICB9XG4gIH0sXG59XG5cbmxldCBDb0NyZWF0ZU1vZGFsID0gbmV3IENvQ3JlYXRlV2luZG93KCk7XG5cbmV4cG9ydCBkZWZhdWx0IENvQ3JlYXRlTW9kYWw7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../CoCreate-modal/src/index.js\n")},"../CoCreate-modal/src/modal.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _utils = __webpack_require__(/*! ./utils.js */ "../CoCreate-modal/src/utils.js");\n\nfunction Modal(el, options, container) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    return;\n  }\n  /** define constant **/\n\n\n  this.MARGIN = 5;\n  this.FULLSCREEN_MARGIN = -20;\n  this.NO_SNAP = -31;\n  this.SNAP_MARGIN = -10;\n  this.RIGHT_SCROL = 5; // \tif (window.mobilecheck()) {\n  // \t  this.MARGIN = 20;\n  // \t}\n\n  /** options **/\n\n  let defaults = {\n    minWidth: 60,\n    minHeight: 40\n  };\n  this.id = (0, _utils.generateUUID)(20);\n  this.el = el;\n  this.clicked = null;\n  this.redraw = false;\n  this.boundStatus = {};\n  /**\n   * x: mouse x in element\n   * y: mouse y in element\n   * cx: x in document\n   * cy: y in document\n   * */\n\n  this.point = {};\n  this.rect = {};\n  this.clickedInfo = null;\n  this.preSnapped = null;\n  this.prevRect = {};\n  this.isSnap = false;\n  this.isHeader = true;\n  this.dragArea = null;\n  this.headerArea = null;\n  this.width = 0;\n  this.height = 0;\n  this.isParked = false;\n  this.iframe = null;\n  this.container = container;\n  this.options = Object.assign(defaults, options);\n  this.el.setAttribute("id", this.id);\n  window.localStorage.setItem(\'page_id\', this.id);\n\n  this._init();\n\n  this._setModalSize();\n\n  this._initEvent();\n\n  this.__animate();\n}\n\nModal.prototype = {\n  constructor: Modal,\n  _init: function () {\n    var opt = this.options;\n    this.isAjax = opt.ajax ? opt.ajax : this.el.getAttribute("data-modal_ajax");\n    var windowURL = opt.url ? opt.url : this.el.getAttribute("href");\n    var width = opt.width ? opt.width : this.el.getAttribute("data-modal_width");\n    var height = opt.height ? opt.height : this.el.getAttribute("data-modal_height");\n    var color = opt.color ? opt.color : this.el.getAttribute("data-modal_color");\n    var x = opt.x ? opt.x : this.el.getAttribute("data-modal_x");\n    var y = opt.y ? opt.y : this.el.getAttribute("data-modal_y");\n    var showHeader = opt.header ? opt.header : this.el.getAttribute("data-modal_header");\n    var attributes = opt.attributes; //. set default\n    // this.el.style.width = "300px";\n    // this.el.style.height = "100%";\n    // this.el.style.left = 0;\n    // this.el.style.right = 0;\n    // this.el.style.borderColor = "#888";\n\n    if (width && width != "") {\n      this.el.style.width = width;\n    } else {\n      this.el.style.width = "600px";\n    }\n\n    if (height && height != "") {\n      this.el.style.height = height;\n    } else {\n      this.el.style.height = "100%";\n    }\n\n    if (this.el.parentElement.clientWidth < this.el.clientWidth) {\n      this.el.style.width = "100%";\n    }\n\n    if (this.el.parentElement.clientHeight < this.el.clientHeight) {\n      this.el.style.width = "100%";\n    }\n\n    if (x && x != "") {\n      this.el.style.left = x;\n    } else {\n      let hX = (this.el.parentElement.clientWidth - this.el.offsetWidth) / 2;\n      hX = hX > 0 ? hX : 0;\n      this.el.style.left = hX + "px";\n    }\n\n    if (y && y != "") {\n      this.el.style.top = y;\n    } else {\n      let hY = (this.el.parentElement.clientHeight - this.el.offsetHeight) / 2;\n      hY = hY > 0 ? hY : 0;\n      this.el.style.top = hY + "px";\n    }\n\n    if (color && color !== "") this.el.style.borderColor = color;\n\n    if (showHeader == "true") {\n      this.isHeader = true;\n\n      this._createTitle();\n    } else {\n      this.isHeader = false;\n\n      this._createDragArea();\n    }\n\n    this.el.innerHTML = this.el.innerHTML + `<div class="parked-closeBtn"><i class="fas fa-times closeBtn"></i></div>`;\n    let iframe = null;\n\n    if (windowURL && windowURL != "") {\n      iframe = this.__createContainer(this.headerArea);\n      iframe.src = windowURL;\n    } else if (attributes) {\n      iframe = this.__createContainer(this.headerArea, attributes[\'data-modal_iframe\'] === "false" ? "div" : "iframe");\n\n      if (attributes[\'data-pass_to\']) {\n        iframe.setAttribute(\'data-pass_id\', attributes[\'data-pass_to\']);\n        iframe.setAttribute(\'data-collection\', "");\n        iframe.setAttribute(\'data-document_id\', "");\n        iframe.setAttribute(\'data-request_id\', (0, _utils.generateUUID)(20));\n      }\n\n      if (attributes[\'data-pass_name\']) {\n        iframe.setAttribute(\'name\', attributes[\'data-pass_name\']);\n      }\n    } else {\n      return;\n    }\n\n    this.el.appendChild(iframe);\n    this.iframe = iframe;\n  },\n  __createContainer: function (isHeader, type) {\n    const tag = type || "iframe";\n    let container = document.createElement(tag);\n    container.style.width = "100%";\n    container.style.height = "100%";\n\n    if (isHeader) {\n      container.style.height = "calc(100% - 45px)";\n    }\n\n    if (type != "iframe") {\n      container.setAttribute(\'class\', \'domEditor\');\n    }\n\n    return container;\n  },\n  _initEvent: function () {\n    let self = this;\n\n    if (this.iframe) {\n      this.iframe.addEventListener(\'load\', function () {\n        console.log(self.iframe.contentDocument);\n        const iframeContent = self.iframe.contentDocument;\n        const nav = iframeContent.querySelector(\'.nav\');\n        iframeContent.addEventListener(\'click\', function () {\n          var event = new CustomEvent("cocreate-selectmodal", {\n            detail: {\n              modal: self\n            }\n          });\n          self.el.parentNode.dispatchEvent(event);\n        });\n      });\n    }\n\n    this.el.addEventListener("click", function (e) {\n      var event = new CustomEvent("cocreate-selectmodal", {\n        detail: {\n          modal: self\n        }\n      });\n      self.el.parentNode.dispatchEvent(event);\n    }, true);\n    this.el.addEventListener("dblclick", function (e) {\n      if (self.isParked) {\n        self.isParked = false;\n        self.el.classList.remove("modal-parked");\n      }\n    });\n    this.el.addEventListener(\'modal-resizing\', function (e) {\n      console.log(\'resizing event trigger\');\n    });\n    this.el.addEventListener(\'touchstart\', function (e) {\n      self.changeRightDragEl(true);\n      var event = new CustomEvent("cocreate-selectmodal", {\n        detail: {\n          modal: self\n        }\n      });\n      self.el.parentNode.dispatchEvent(event);\n\n      self._onDown(e.touches[0]);\n    });\n    this.el.addEventListener(\'mousemove\', function (e) {\n      self.changeRightDragEl(false);\n    });\n    this.el.addEventListener(\'mousedown\', function (e) {\n      var event = new CustomEvent("cocreate-selectmodal", {\n        detail: {\n          modal: self\n        }\n      });\n      self.el.parentNode.dispatchEvent(event);\n\n      self._onDown(e);\n    });\n    this.el.addEventListener(\'mouseup\', function (e) {// self.changeRightDragEl(true);\n    });\n\n    this._addButtonEvent();\n\n    this.el.addEventListener("modal-resizeend", function (e) {\n      self._saveFetch(); // self.changeRightDragEl(true);\n\n    });\n    this.el.addEventListener("modal-moveend", function (e) {\n      self._saveFetch(); // self.changeRightDragEl(true);\n\n    });\n  },\n  changeRightDragEl: function (isRevert = true) {\n    const right_el = this.el.querySelector(\'.modal-drag-area-right\');\n    const size = isRevert ? "0px" : "-10px";\n\n    if (right_el) {\n      right_el.style.right = size;\n    }\n\n    this.RIGHT_SCROL = !isRevert ? 0 : 5;\n  },\n  _addButtonEvent: function () {\n    var self = this;\n\n    if (this.el.querySelector(".modal-title-area .closeBtn")) {\n      this.el.querySelector(".modal-title-area .closeBtn").addEventListener("click", function (e) {\n        e.preventDefault();\n        self.el.parentNode.dispatchEvent(new CustomEvent("cocreate-removemodal", {\n          detail: {\n            modal: self\n          }\n        }));\n      });\n    }\n\n    if (this.el.querySelector(".parked-closeBtn .closeBtn")) {\n      this.el.querySelector(".parked-closeBtn .closeBtn").addEventListener("click", function (e) {\n        e.preventDefault();\n        self.el.parentNode.dispatchEvent(new CustomEvent("cocreate-removemodal", {\n          detail: {\n            modal: self\n          }\n        }));\n      });\n    }\n\n    if (this.el.querySelector(".modal-title-area .maximizeBtn")) {\n      this.el.querySelector(".modal-title-area .maximizeBtn").addEventListener("click", function (e) {\n        e.preventDefault();\n\n        self._setMaximize();\n      });\n    }\n\n    if (this.el.querySelector(".modal-title-area .minimizeBtn")) {\n      this.el.querySelector(".modal-title-area .minimizeBtn").addEventListener("click", function (e) {\n        e.preventDefault();\n        self.togglePark();\n      });\n    } // if (this.el.querySelector(".modal-title-area .parkBtn")) {\n    //   this.el.querySelector(".modal-title-area .parkBtn").addEventListener("click", function(e) {\n    //     self.togglePark()\n    //   })\n    // }\n\n  },\n  togglePark: function () {\n    if (this.isParked) {\n      this.isParked = false;\n      this.el.classList.remove("modal-parked");\n    } else {\n      this.isParked = true;\n      this.el.classList.add("modal-parked");\n    }\n  },\n  _setModalSize: function () {\n    let bound = this.el.getBoundingClientRect();\n    let parentBound = this.el.parentNode.getBoundingClientRect();\n    this.width = bound.width;\n    this.height = bound.height;\n    this.el.style.left = bound.left - parentBound.left;\n    this.el.style.top = bound.top - parentBound.top;\n  },\n  _saveFetch: function () {\n    if (this.el.classList.contains("domEditor")) {\n      CoCreateHtmlTags.save(this.el);\n    }\n  },\n  _onMove: function (e) {\n    const data = this.__getBoundStatus(e);\n\n    this.redraw = true;\n  },\n  _onDown: function (e) {\n    //. set clicked\n    this.__getBoundStatus(e);\n\n    var isResizing = this.boundStatus.isRight || this.boundStatus.isLeft || this.boundStatus.isTop || this.boundStatus.isBottom;\n    this.clickedInfo = {\n      x: this.point.x,\n      y: this.point.y,\n      cx: this.point.cx,\n      cy: this.point.cy,\n      w: this.rect.width,\n      h: this.rect.height,\n      isResizing: isResizing,\n      isMoving: !isResizing && this._isMovable(),\n      boundStatus: this.boundStatus,\n      isChangeStart: true\n    };\n  },\n  _onUp: function (e) {\n    if (e) {\n      this.__getBoundStatus(e);\n    }\n\n    if (!this.clickedInfo) {\n      return;\n    }\n\n    if (this.clickedInfo.isMoving && !this.isParked) {\n      let p_w = this.el.parentNode.offsetWidth,\n          p_h = this.el.parentNode.offsetHeight;\n      let snap_info = null;\n\n      if (this.__between(this.rect.top, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(this.rect.left, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(p_w - this.rect.right, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(p_h - this.rect.bottom, this.NO_SNAP, this.FULLSCREEN_MARGIN)) {\n        snap_info = {\n          x: 0,\n          y: 0,\n          w: \'100%\',\n          h: \'100%\'\n        };\n      } else if (this.__between(this.rect.top, this.NO_SNAP, this.SNAP_MARGIN)) {\n        snap_info = {\n          x: 0,\n          y: 0,\n          w: \'100%\',\n          h: \'50%\'\n        };\n      } else if (this.__between(this.rect.left, this.NO_SNAP, this.SNAP_MARGIN)) {\n        snap_info = {\n          x: 0,\n          y: 0,\n          w: \'50%\',\n          h: \'100%\'\n        };\n      } else if (this.__between(p_w - this.rect.right, this.NO_SNAP, this.SNAP_MARGIN)) {\n        snap_info = {\n          x: \'50%\',\n          y: 0,\n          w: \'50%\',\n          h: \'100%\'\n        };\n      } else if (this.__between(p_h - this.rect.bottom, this.NO_SNAP, this.SNAP_MARGIN)) {\n        snap_info = {\n          x: 0,\n          y: \'50%\',\n          w: \'100%\',\n          h: \'50%\'\n        };\n      }\n\n      if (snap_info && !this.isSnap) {\n        this.__setBound(this.el, snap_info.x, snap_info.y, snap_info.w, snap_info.h);\n\n        this.preSnapped = {\n          x: this.rect.x,\n          y: this.rect.y,\n          width: this.rect.width,\n          height: this.rect.height\n        };\n        this.isSnap = true;\n      }\n\n      var ghost_info = {\n        x: this.rect.x,\n        y: this.rect.y,\n        w: this.rect.width,\n        h: this.rect.height\n      };\n      this.el.parentNode.dispatchEvent(new CustomEvent("cocreate-modalghost", {\n        detail: ghost_info\n      }));\n    }\n\n    if (this.clickedInfo.isResizing) {\n      this.createModalEvent(\'modal-resizeend\');\n\n      this._setModalSize();\n\n      this.isSnap = false;\n    } else if (this.clickedInfo.isMoving) {\n      this.createModalEvent(\'modal-moveend\');\n    }\n\n    this.clickedInfo = null;\n  },\n  __setBound: function (el, x, y, w, h) {\n    var borderHeight = this.el.offsetHeight - this.el.clientHeight;\n    var borderWidth = this.el.offsetWidth - this.el.clientWidth;\n    el.style.left = x;\n    el.style.top = y; // el.style.width = "calc( " + w + " - " + borderWidth + "px )";\n    // el.style.height = "calc( "  + h + " - " + borderHeight + "px )";\n\n    el.style.width = w;\n    el.style.height = h;\n  },\n  __setRectInfo: function () {\n    let bound = this.el.getBoundingClientRect();\n    let parentRect = this.el.parentNode.getBoundingClientRect();\n    this.rect = {};\n    this.rect.x = bound.x - parentRect.x;\n    this.rect.y = bound.y - parentRect.y;\n    this.rect.width = bound.width;\n    this.rect.height = bound.height;\n    this.rect.top = bound.top - parentRect.top;\n    this.rect.bottom = bound.bottom - parentRect.top;\n    this.rect.left = bound.left - parentRect.left;\n    this.rect.right = bound.right - parentRect.left;\n  },\n  __getBoundStatus: function (e) {\n    let bound = this.el.getBoundingClientRect();\n    let parentRect = this.el.parentNode.getBoundingClientRect();\n    let x = e.clientX - bound.left; // - parentRect.left;\n\n    let y = e.clientY - bound.top; // - parentRect.top;\n\n    this.__setRectInfo();\n\n    this.point.x = x;\n    this.point.y = y;\n    this.point.cx = e.clientX - parentRect.left;\n    this.point.cy = e.clientY - parentRect.top;\n    this.boundStatus = {\n      isTop: y < this.MARGIN && y > -this.MARGIN,\n      isLeft: x < this.MARGIN && x > -this.MARGIN,\n      isRight: x >= bound.width - this.RIGHT_SCROL && x <= bound.width + this.MARGIN + (this.MARGIN - this.RIGHT_SCROL),\n      isBottom: y >= bound.height - this.MARGIN && y <= bound.height + this.MARGIN\n    };\n    return this.boundStatus;\n  },\n  __between: function (x, min, max) {\n    return x >= min && x <= max;\n  },\n  __animate: function () {\n    let self = this;\n    requestAnimationFrame(function () {\n      self.__animate();\n    });\n\n    if (!this.redraw) {\n      return;\n    }\n\n    this.redraw = false;\n    let c_info = this.clickedInfo;\n    var eventName = null;\n    /**\n     * Resize process\n     **/\n\n    if (c_info && c_info.isResizing && !this.isParked) {\n      if (c_info.boundStatus.isRight) this.el.style.width = Math.max(this.point.x, this.options.minWidth) + \'px\';\n\n      if (c_info.boundStatus.isBottom) {\n        this.el.style.height = Math.max(this.point.y, this.options.minHeight) + \'px\';\n      }\n\n      if (c_info.boundStatus.isLeft) {\n        var c_width = Math.max(c_info.cx - this.point.cx + c_info.w, this.options.minWidth);\n\n        if (c_width > this.options.minWidth) {\n          this.el.style.width = c_width + \'px\';\n          this.el.style.left = this.point.cx + \'px\';\n        }\n      }\n\n      if (c_info.boundStatus.isTop) {\n        var c_height = Math.max(c_info.cy - this.point.cy + c_info.h, this.options.minHeight);\n\n        if (c_height > this.options.minHeight) {\n          this.el.style.height = c_height + \'px\';\n          this.el.style.top = this.point.cy + \'px\';\n        }\n      }\n\n      eventName = "modal-resizing";\n\n      if (c_info.isChangeStart) {\n        this.clickedInfo.isChangeStart = false;\n        eventName = "modal-resizestart";\n      }\n\n      this.createModalEvent(eventName);\n      return;\n    }\n\n    if (c_info && c_info.isMoving) {\n      /** \n       * Ghost Process\n       **/\n      let p_w = this.el.parentNode.offsetWidth,\n          p_h = this.el.parentNode.offsetHeight;\n      let ghost_info = null;\n\n      if (this.__between(this.rect.top, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(this.rect.left, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(p_w - this.rect.right, this.NO_SNAP, this.FULLSCREEN_MARGIN) || this.__between(p_h - this.rect.bottom, this.NO_SNAP, this.FULLSCREEN_MARGIN)) {\n        ghost_info = {\n          x: 0,\n          y: 0,\n          w: p_w,\n          h: p_h,\n          type: "show"\n        };\n      } else if (this.__between(this.rect.top, this.NO_SNAP, this.SNAP_MARGIN)) {\n        ghost_info = {\n          x: 0,\n          y: 0,\n          w: p_w,\n          h: p_h / 2,\n          type: "show"\n        };\n      } else if (this.__between(this.rect.left, this.NO_SNAP, this.SNAP_MARGIN)) {\n        ghost_info = {\n          x: 0,\n          y: 0,\n          w: p_w / 2,\n          h: p_h,\n          type: "show"\n        };\n      } else if (this.__between(p_w - this.rect.right, this.NO_SNAP, this.SNAP_MARGIN)) {\n        ghost_info = {\n          x: p_w / 2,\n          y: 0,\n          w: p_w / 2,\n          h: p_h,\n          type: "show"\n        };\n      } else if (this.__between(p_h - this.rect.bottom, this.NO_SNAP, this.SNAP_MARGIN)) {\n        ghost_info = {\n          x: 0,\n          y: p_h / 2,\n          w: p_w,\n          h: p_h / 2,\n          type: "show"\n        };\n      } else {\n        ghost_info = {\n          x: this.rect.left,\n          y: this.rect.top,\n          w: this.rect.width,\n          h: this.rect.height,\n          type: "hide"\n        };\n      }\n\n      if (ghost_info && !this.isParked && !this.isSnap) {\n        this.el.parentNode.dispatchEvent(new CustomEvent("cocreate-modalghost", {\n          detail: ghost_info\n        }));\n      }\n\n      if (this.isSnap) {\n        // this.el.style.left = (this.point.cx - this.preSnapped.width / 2) + \'px\';\n        // this.el.style.top = (this.point.cy - Math.min(c_info.y, this.preSnapped.height)) + \'px\';\n        this.el.style.left = this.point.cx + \'px\';\n        this.el.style.top = this.point.cy + \'px\';\n        this.el.style.width = this.preSnapped.width + \'px\';\n        this.el.style.height = this.preSnapped.height + \'px\';\n        this.isSnap = false;\n      } else {\n        this.el.style.top = this.point.cy - c_info.y + \'px\';\n        this.el.style.left = this.point.cx - c_info.x + \'px\';\n      }\n\n      eventName = "modal-moving";\n\n      if (c_info.isChangeStart) {\n        this.clickedInfo.isChangeStart = false;\n        eventName = "modal-movestart";\n      }\n\n      this.createModalEvent(eventName);\n      return;\n    }\n\n    this.redraw = false;\n\n    this._setCursor(this.boundStatus);\n  },\n\n  _setMaximize() {\n    if (!this.isSnap) {\n      this.isSnap = true;\n      this.preSnapped = {\n        x: this.rect.x,\n        y: this.rect.y,\n        width: this.rect.width,\n        height: this.rect.height\n      };\n\n      this.__setBound(this.el, 0, 0, "100%", "100%");\n    } else {\n      this.isSnap = false;\n      this.el.style.left = this.preSnapped.x + \'px\';\n      this.el.style.top = this.preSnapped.y + \'px\';\n      this.el.style.width = this.preSnapped.width + \'px\';\n      this.el.style.height = this.preSnapped.height + \'px\';\n    } // this.clickedInfo = null;\n\n  },\n\n  _setCursor(bound) {\n    let cursor = "default";\n    if (!this.isParked && bound.isRight && bound.isBottom || bound.isLeft && bound.isTop) cursor = \'nwse-resize\';else if (!this.isParked && bound.isRight && bound.isTop || bound.isBottom && bound.left) cursor = \'nwsw-resize\';else if (!this.isParked && bound.isRight || bound.isLeft) cursor = \'ew-resize\';else if (!this.isParked && bound.isBottom || bound.isTop) cursor = \'ns-resize\';else if (this._isMovable()) cursor = "move";\n    this.el.style.cursor = cursor;\n    this.setContainerEvent(cursor);\n  },\n\n  //. setParent Event\n  setContainerEvent(status) {\n    console.log(status);\n    if (!this.container) return;\n\n    if (status != \'default\') {\n      this.container.style.pointerEvents = "auto";\n    } else {\n      this.container.style.pointerEvents = "none";\n    }\n  },\n\n  _isMovable() {\n    var width = this.rect.width;\n\n    if (this.isHeader) {\n      width -= 120;\n    }\n\n    return this.point.x > 0 && this.point.x < width && this.point.y > 0 && this.point.y < 50;\n  },\n\n  /**\n   * Modal Events\n   * resize: modal-resizing, modal-resizeend, modal-resizestart\n   * move: modal-moving, modal-moveend, modal-movestart\n   **/\n  createModalEvent(eventName) {\n    var event = new CustomEvent(eventName, {});\n    this.el.dispatchEvent(event);\n  },\n\n  _createTitle: function (n) {\n    var header_template = `<div class="nav bg-light-gray"><ul class="modal-title-area">\n          <li><a class="minimizeBtn"><i class="far fa-window-minimize"></i></a></li>\n          <li><a class="maximizeBtn"><i class="far fa-window-restore"></i></a></li>\n         \x3c!-- <li><a class="parkBtn"><i class="fas fa-dot-circle "></i></a></li> --\x3e\n          <li><a class="closeBtn"><i class="fas fa-times"></i></a></li>\n      </ul></div>`;\n    this.el.innerHTML = header_template + this.el.innerHTML;\n    this.headerArea = this.el.querySelector(\'.modal-title-area\');\n  },\n  _createDragArea: function () {\n    this.dragArea = document.createElement("div");\n    this.dragArea.classList.add("modal-drag-area");\n    let left_area = document.createElement("div");\n    left_area.classList.add("modal-drag-area-left");\n    let right_area = document.createElement("div");\n    right_area.classList.add("modal-drag-area-right");\n    let bottom_area = document.createElement("div");\n    bottom_area.classList.add("modal-drag-area-bottom");\n    this.el.appendChild(this.dragArea);\n    this.el.appendChild(left_area);\n    this.el.appendChild(right_area);\n    this.el.appendChild(bottom_area);\n  },\n  resize: function (dx, dy, width, height) {\n    if (this.isSnap) {\n      return;\n    }\n\n    var borderHeight = this.el.offsetHeight - this.el.clientHeight;\n    var borderWidth = this.el.offsetWidth - this.el.clientWidth;\n    width = width - borderWidth;\n    height = height - borderHeight;\n    /** left, right **/\n\n    if (dx !== 0 && !this.isPercentDimesion(this.el.style.width)) {\n      var el_width = this.el.offsetWidth;\n\n      if (el_width + this.rect.left > width && dx < 0) {\n        this.el.style.left = this._setDimension(Math.max(0, this.rect.left + dx));\n      }\n\n      this.el.style.width = this._setDimension(Math.min(el_width, width));\n    }\n    /** top, bottom **/\n\n\n    if (dy !== 0 && !this.isPercentDimesion(this.el.style.height)) {\n      var el_height = this.el.offsetHeight;\n\n      if (el_height + this.rect.top > height && dy < 0) {\n        this.el.style.top = this._setDimension(Math.max(0, this.rect.top + dy));\n      }\n\n      this.el.style.height = this._setDimension(Math.min(el_height, height));\n    }\n\n    this.__setRectInfo();\n  },\n  _setDimension: function (data, isPercent) {\n    if (isPercent) {\n      return data + "%";\n    } else {\n      return data + "px";\n    }\n  },\n  isPercentDimesion: function (dimension) {\n    if (!dimension) return false;\n\n    if (typeof dimension === \'string\' && dimension.substr(-1, 1) === "%") {\n      return true;\n    }\n\n    return false;\n  }\n};\nvar _default = Modal;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-modal/src/modal.js\n')},"../CoCreate-modal/src/utils.js":(__unused_webpack_module,exports)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.generateUUID = generateUUID;\nexports.ModalStorage = void 0;\n\nfunction generateUUID(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  var d = new Date().toTimeString();\n  var random = d.replace(/[\\W_]+/g, \"\").substr(0, 6);\n  result += random;\n  return result;\n}\n\nvar ModalStorage = {};\nexports.ModalStorage = ModalStorage;\nObject.defineProperty(ModalStorage, \"rootPageId\", {\n  get: function () {\n    return window.localStorage.getItem('page_rootId');\n  },\n  set: function (id) {\n    window.localStorage.setItem('page_rootId', id);\n  }\n});\nObject.defineProperty(ModalStorage, \"parentPageId\", {\n  get: function () {\n    return window.localStorage.getItem('page_parentId');\n  },\n  set: function (id) {\n    window.localStorage.setItem('page_parentId', id);\n  }\n});\nObject.defineProperty(ModalStorage, \"pageId\", {\n  get: function () {\n    return window.localStorage.getItem('page_id');\n  },\n  set: function (id) {\n    window.localStorage.setItem('page_id', id);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5jdXJzb3JzLy4uL0NvQ3JlYXRlLW1vZGFsL3NyYy91dGlscy5qcz83MTY5Il0sIm5hbWVzIjpbImdlbmVyYXRlVVVJRCIsImxlbmd0aCIsInJlc3VsdCIsImNoYXJhY3RlcnMiLCJjaGFyYWN0ZXJzTGVuZ3RoIiwiaSIsImNoYXJBdCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImQiLCJEYXRlIiwidG9UaW1lU3RyaW5nIiwicmVwbGFjZSIsInN1YnN0ciIsIk1vZGFsU3RvcmFnZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0Iiwid2luZG93IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNldCIsImlkIiwic2V0SXRlbSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxTQUFTQSxZQUFULENBQXNCQyxNQUF0QixFQUE4QjtBQUM1QixNQUFJQyxNQUFNLEdBQWEsRUFBdkI7QUFDQSxNQUFJQyxVQUFVLEdBQVMsZ0VBQXZCO0FBQ0EsTUFBSUMsZ0JBQWdCLEdBQUdELFVBQVUsQ0FBQ0YsTUFBbEM7O0FBQ0EsT0FBTSxJQUFJSSxDQUFDLEdBQUcsQ0FBZCxFQUFpQkEsQ0FBQyxHQUFHSixNQUFyQixFQUE2QkksQ0FBQyxFQUE5QixFQUFtQztBQUNqQ0gsVUFBTSxJQUFJQyxVQUFVLENBQUNHLE1BQVgsQ0FBa0JDLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0JMLGdCQUEzQixDQUFsQixDQUFWO0FBQ0Q7O0FBRUQsTUFBSU0sQ0FBQyxHQUFHLElBQUlDLElBQUosR0FBV0MsWUFBWCxFQUFSO0FBQ0EsTUFBSUgsTUFBTSxHQUFHQyxDQUFDLENBQUNHLE9BQUYsQ0FBVSxTQUFWLEVBQXFCLEVBQXJCLEVBQXlCQyxNQUF6QixDQUFnQyxDQUFoQyxFQUFrQyxDQUFsQyxDQUFiO0FBQ0FaLFFBQU0sSUFBSU8sTUFBVjtBQUNBLFNBQU9QLE1BQVA7QUFDRDs7QUFFRCxJQUFJYSxZQUFZLEdBQUcsRUFBbkI7O0FBRUFDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkYsWUFBdEIsRUFBb0MsWUFBcEMsRUFBa0Q7QUFDaERHLEtBQUcsRUFBRSxZQUFXO0FBQUUsV0FBT0MsTUFBTSxDQUFDQyxZQUFQLENBQW9CQyxPQUFwQixDQUE0QixhQUE1QixDQUFQO0FBQW1ELEdBRHJCO0FBRWhEQyxLQUFHLEVBQUUsVUFBU0MsRUFBVCxFQUFhO0FBQUVKLFVBQU0sQ0FBQ0MsWUFBUCxDQUFvQkksT0FBcEIsQ0FBNEIsYUFBNUIsRUFBMkNELEVBQTNDO0FBQWlEO0FBRnJCLENBQWxEO0FBS0FQLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkYsWUFBdEIsRUFBb0MsY0FBcEMsRUFBb0Q7QUFDbERHLEtBQUcsRUFBRSxZQUFXO0FBQUUsV0FBT0MsTUFBTSxDQUFDQyxZQUFQLENBQW9CQyxPQUFwQixDQUE0QixlQUE1QixDQUFQO0FBQXFELEdBRHJCO0FBRWxEQyxLQUFHLEVBQUUsVUFBU0MsRUFBVCxFQUFhO0FBQUVKLFVBQU0sQ0FBQ0MsWUFBUCxDQUFvQkksT0FBcEIsQ0FBNEIsZUFBNUIsRUFBNkNELEVBQTdDO0FBQW1EO0FBRnJCLENBQXBEO0FBS0FQLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkYsWUFBdEIsRUFBb0MsUUFBcEMsRUFBOEM7QUFDNUNHLEtBQUcsRUFBRSxZQUFXO0FBQUUsV0FBT0MsTUFBTSxDQUFDQyxZQUFQLENBQW9CQyxPQUFwQixDQUE0QixTQUE1QixDQUFQO0FBQStDLEdBRHJCO0FBRTVDQyxLQUFHLEVBQUUsVUFBU0MsRUFBVCxFQUFhO0FBQUVKLFVBQU0sQ0FBQ0MsWUFBUCxDQUFvQkksT0FBcEIsQ0FBNEIsU0FBNUIsRUFBdUNELEVBQXZDO0FBQTZDO0FBRnJCLENBQTlDIiwiZmlsZSI6Ii4uL0NvQ3JlYXRlLW1vZGFsL3NyYy91dGlscy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGdlbmVyYXRlVVVJRChsZW5ndGgpIHtcbiAgdmFyIHJlc3VsdCAgICAgICAgICAgPSAnJztcbiAgdmFyIGNoYXJhY3RlcnMgICAgICAgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODknO1xuICB2YXIgY2hhcmFjdGVyc0xlbmd0aCA9IGNoYXJhY3RlcnMubGVuZ3RoO1xuICBmb3IgKCB2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKyApIHtcbiAgICByZXN1bHQgKz0gY2hhcmFjdGVycy5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcmFjdGVyc0xlbmd0aCkpO1xuICB9XG4gIFxuICB2YXIgZCA9IG5ldyBEYXRlKCkudG9UaW1lU3RyaW5nKCk7XG4gIHZhciByYW5kb20gPSBkLnJlcGxhY2UoL1tcXFdfXSsvZywgXCJcIikuc3Vic3RyKDAsNik7XG4gIHJlc3VsdCArPSByYW5kb207XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbnZhciBNb2RhbFN0b3JhZ2UgPSB7fTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KE1vZGFsU3RvcmFnZSwgXCJyb290UGFnZUlkXCIsIHtcbiAgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncGFnZV9yb290SWQnKTt9LFxuICBzZXQ6IGZ1bmN0aW9uKGlkKSB7IHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncGFnZV9yb290SWQnLCBpZCk7IH1cbn0pXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShNb2RhbFN0b3JhZ2UsIFwicGFyZW50UGFnZUlkXCIsIHtcbiAgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncGFnZV9wYXJlbnRJZCcpO30sXG4gIHNldDogZnVuY3Rpb24oaWQpIHsgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwYWdlX3BhcmVudElkJywgaWQpOyB9XG59KVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoTW9kYWxTdG9yYWdlLCBcInBhZ2VJZFwiLCB7XG4gIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3BhZ2VfaWQnKTt9LFxuICBzZXQ6IGZ1bmN0aW9uKGlkKSB7IHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncGFnZV9pZCcsIGlkKTsgfVxufSlcblxuXG5leHBvcnQge2dlbmVyYXRlVVVJRCwgTW9kYWxTdG9yYWdlfTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../CoCreate-modal/src/utils.js\n")},"../../node_modules/file-loader/dist/cjs.js!../CoCreate-modal/src/CoCreate-modal.css":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "9035f5ddb466c6c9071b96225340988e.css");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5jdXJzb3JzLy4uL0NvQ3JlYXRlLW1vZGFsL3NyYy9Db0NyZWF0ZS1tb2RhbC5jc3M/MDJjMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUscUJBQXVCLHlDQUF5QyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvZmlsZS1sb2FkZXIvZGlzdC9janMuanMhLi4vQ29DcmVhdGUtbW9kYWwvc3JjL0NvQ3JlYXRlLW1vZGFsLmNzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI5MDM1ZjVkZGI0NjZjNmM5MDcxYjk2MjI1MzQwOTg4ZS5jc3NcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/file-loader/dist/cjs.js!../CoCreate-modal/src/CoCreate-modal.css\n')},"../CoCreate-modal/src/CoCreate-modal.css":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoLinkTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoLinkTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoLinkTag.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoLinkTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoLinkTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_file_loader_dist_cjs_js_CoCreate_modal_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/file-loader/dist/cjs.js!./CoCreate-modal.css */ "../../node_modules/file-loader/dist/cjs.js!../CoCreate-modal/src/CoCreate-modal.css");\n\n            \n\nvar options = {"injectType":"linkTag"};\n\noptions.insert = "head";\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoLinkTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_file_loader_dist_cjs_js_CoCreate_modal_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5jdXJzb3JzLy4uL0NvQ3JlYXRlLW1vZGFsL3NyYy9Db0NyZWF0ZS1tb2RhbC5jc3M/MWUxYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThGO0FBQzlGLFlBQXVHOztBQUV2RyxlQUFlOztBQUVmOztBQUVBLGFBQWEseUdBQUcsQ0FBQyw2RkFBTzs7OztBQUl4QixpRUFBZSxFIiwiZmlsZSI6Ii4uL0NvQ3JlYXRlLW1vZGFsL3NyYy9Db0NyZWF0ZS1tb2RhbC5jc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBpIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b0xpbmtUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9maWxlLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0NvQ3JlYXRlLW1vZGFsLmNzc1wiO1xuXG52YXIgb3B0aW9ucyA9IHtcImluamVjdFR5cGVcIjpcImxpbmtUYWdcIn07XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgZGVmYXVsdCB7fSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../CoCreate-modal/src/CoCreate-modal.css\n')}}]);