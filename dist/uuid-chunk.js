/*! For license information please see uuid-chunk.js.LICENSE.txt */
(this.webpackChunkCoCreate_cursors=this.webpackChunkCoCreate_cursors||[]).push([["uuid-chunk"],{"../CoCreate-uuid/src/index.js":(__unused_webpack_module,exports)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.default = void 0;\nconst CoCreateUUID = {\n  attribute: \'data-uuid\',\n  init: function (container) {\n    const __container = container || document;\n\n    if (!__container.querySelectorAll) {\n      return;\n    }\n\n    let elements = __container.querySelectorAll(`[${this.attribute}]`);\n\n    const self = this;\n    elements.forEach(el => {\n      const len = parseInt(el.getAttribute(self.attribute)) || 36;\n      const uuid = self.generateID(len);\n\n      if (el.tagName === "INPUT" || el.tagName === "TEXTAREA") {\n        el.value = uuid;\n      } else {\n        el.innerHTML = uuid;\n      }\n    });\n  },\n  generateID: function (length = 36) {\n    let d = new Date().getTime();\n    let d2 = window.performance && window.performance.now && window.performance.now() * 1000 || 0;\n    let pattern = \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\';\n\n    if (length <= pattern.length) {\n      pattern = pattern.substr(0, length);\n    } else {\n      let add_len = length - pattern.length;\n      let sub_pattern = "-xxxyyxxx";\n      let group_n = Math.floor(add_len / sub_pattern.length);\n\n      for (let i = 0; i < group_n; i++) {\n        pattern += sub_pattern;\n      }\n\n      group_n = add_len - group_n * sub_pattern.length;\n      pattern += sub_pattern.substr(0, group_n);\n    }\n\n    let uuid = pattern.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16;\n\n      if (d > 0) {\n        var r = (d + r) % 16 | 0;\n        d = Math.floor(d / 16);\n      } else {\n        var r = (d2 + r) % 16 | 0;\n        d2 = Math.floor(d2 / 16);\n      }\n\n      return (c == \'x\' ? r : r & 0x7 | 0x8).toString(16);\n    });\n    return uuid;\n  }\n};\nCoCreateUUID.init();\nvar _default = CoCreateUUID;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5jdXJzb3JzLy4uL0NvQ3JlYXRlLXV1aWQvc3JjL2luZGV4LmpzPzNjNjYiXSwibmFtZXMiOlsiQ29DcmVhdGVVVUlEIiwiYXR0cmlidXRlIiwiaW5pdCIsImNvbnRhaW5lciIsIl9fY29udGFpbmVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZWxlbWVudHMiLCJzZWxmIiwiZm9yRWFjaCIsImVsIiwibGVuIiwicGFyc2VJbnQiLCJnZXRBdHRyaWJ1dGUiLCJ1dWlkIiwiZ2VuZXJhdGVJRCIsInRhZ05hbWUiLCJ2YWx1ZSIsImlubmVySFRNTCIsImxlbmd0aCIsImQiLCJEYXRlIiwiZ2V0VGltZSIsImQyIiwid2luZG93IiwicGVyZm9ybWFuY2UiLCJub3ciLCJwYXR0ZXJuIiwic3Vic3RyIiwiYWRkX2xlbiIsInN1Yl9wYXR0ZXJuIiwiZ3JvdXBfbiIsIk1hdGgiLCJmbG9vciIsImkiLCJyZXBsYWNlIiwiYyIsInIiLCJyYW5kb20iLCJ0b1N0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsTUFBTUEsWUFBWSxHQUFHO0FBQ25CQyxXQUFTLEVBQUUsV0FEUTtBQUduQkMsTUFBSSxFQUFFLFVBQVNDLFNBQVQsRUFBb0I7QUFFeEIsVUFBTUMsV0FBVyxHQUFHRCxTQUFTLElBQUlFLFFBQWpDOztBQUNBLFFBQUksQ0FBQ0QsV0FBVyxDQUFDRSxnQkFBakIsRUFBbUM7QUFDcEM7QUFDQTs7QUFFRCxRQUFJQyxRQUFRLEdBQUdILFdBQVcsQ0FBQ0UsZ0JBQVosQ0FBOEIsSUFBRyxLQUFLTCxTQUFVLEdBQWhELENBQWY7O0FBQ0EsVUFBTU8sSUFBSSxHQUFHLElBQWI7QUFDQUQsWUFBUSxDQUFDRSxPQUFULENBQWlCQyxFQUFFLElBQUk7QUFDckIsWUFBTUMsR0FBRyxHQUFHQyxRQUFRLENBQUNGLEVBQUUsQ0FBQ0csWUFBSCxDQUFnQkwsSUFBSSxDQUFDUCxTQUFyQixDQUFELENBQVIsSUFBNkMsRUFBekQ7QUFDQSxZQUFNYSxJQUFJLEdBQUdOLElBQUksQ0FBQ08sVUFBTCxDQUFnQkosR0FBaEIsQ0FBYjs7QUFDQSxVQUFJRCxFQUFFLENBQUNNLE9BQUgsS0FBZSxPQUFmLElBQTBCTixFQUFFLENBQUNNLE9BQUgsS0FBZSxVQUE3QyxFQUF5RDtBQUNyRE4sVUFBRSxDQUFDTyxLQUFILEdBQVdILElBQVg7QUFDSCxPQUZELE1BRU87QUFDTEosVUFBRSxDQUFDUSxTQUFILEdBQWVKLElBQWY7QUFDRDtBQUNGLEtBUkQ7QUFTQyxHQXJCa0I7QUF1Qm5CQyxZQUFVLEVBQUUsVUFBU0ksTUFBTSxHQUFHLEVBQWxCLEVBQXNCO0FBQ2hDLFFBQUlDLENBQUMsR0FBRyxJQUFJQyxJQUFKLEdBQVdDLE9BQVgsRUFBUjtBQUNBLFFBQUlDLEVBQUUsR0FBSUMsTUFBTSxDQUFDQyxXQUFQLElBQXNCRCxNQUFNLENBQUNDLFdBQVAsQ0FBbUJDLEdBQXpDLElBQWlERixNQUFNLENBQUNDLFdBQVAsQ0FBbUJDLEdBQW5CLEtBQXlCLElBQTNFLElBQXFGLENBQTlGO0FBQ0EsUUFBSUMsT0FBTyxHQUFHLHNDQUFkOztBQUVBLFFBQUlSLE1BQU0sSUFBSVEsT0FBTyxDQUFDUixNQUF0QixFQUE4QjtBQUM1QlEsYUFBTyxHQUFHQSxPQUFPLENBQUNDLE1BQVIsQ0FBZSxDQUFmLEVBQWtCVCxNQUFsQixDQUFWO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsVUFBSVUsT0FBTyxHQUFHVixNQUFNLEdBQUdRLE9BQU8sQ0FBQ1IsTUFBL0I7QUFDQSxVQUFJVyxXQUFXLEdBQUcsV0FBbEI7QUFFQSxVQUFJQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSixPQUFPLEdBQUdDLFdBQVcsQ0FBQ1gsTUFBakMsQ0FBZDs7QUFFQSxXQUFLLElBQUllLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdILE9BQXBCLEVBQTZCRyxDQUFDLEVBQTlCLEVBQWtDO0FBQ2hDUCxlQUFPLElBQUlHLFdBQVg7QUFDRDs7QUFFREMsYUFBTyxHQUFHRixPQUFPLEdBQUdFLE9BQU8sR0FBR0QsV0FBVyxDQUFDWCxNQUExQztBQUNBUSxhQUFPLElBQUlHLFdBQVcsQ0FBQ0YsTUFBWixDQUFtQixDQUFuQixFQUFzQkcsT0FBdEIsQ0FBWDtBQUNEOztBQUVELFFBQUlqQixJQUFJLEdBQUdhLE9BQU8sQ0FBQ1EsT0FBUixDQUFnQixPQUFoQixFQUF5QixVQUFTQyxDQUFULEVBQVk7QUFDNUMsVUFBSUMsQ0FBQyxHQUFHTCxJQUFJLENBQUNNLE1BQUwsS0FBZ0IsRUFBeEI7O0FBQ0EsVUFBR2xCLENBQUMsR0FBRyxDQUFQLEVBQVM7QUFDTCxZQUFJaUIsQ0FBQyxHQUFHLENBQUNqQixDQUFDLEdBQUdpQixDQUFMLElBQVEsRUFBUixHQUFhLENBQXJCO0FBQ0FqQixTQUFDLEdBQUdZLElBQUksQ0FBQ0MsS0FBTCxDQUFXYixDQUFDLEdBQUMsRUFBYixDQUFKO0FBQ0gsT0FIRCxNQUdPO0FBQ0gsWUFBSWlCLENBQUMsR0FBRyxDQUFDZCxFQUFFLEdBQUdjLENBQU4sSUFBUyxFQUFULEdBQWMsQ0FBdEI7QUFDQWQsVUFBRSxHQUFHUyxJQUFJLENBQUNDLEtBQUwsQ0FBV1YsRUFBRSxHQUFDLEVBQWQsQ0FBTDtBQUNIOztBQUNELGFBQU8sQ0FBQ2EsQ0FBQyxJQUFFLEdBQUgsR0FBU0MsQ0FBVCxHQUFjQSxDQUFDLEdBQUMsR0FBRixHQUFNLEdBQXJCLEVBQTJCRSxRQUEzQixDQUFvQyxFQUFwQyxDQUFQO0FBQ0gsS0FWVSxDQUFYO0FBV0EsV0FBT3pCLElBQVA7QUFDRDtBQXhEa0IsQ0FBckI7QUE2REFkLFlBQVksQ0FBQ0UsSUFBYjtlQUVlRixZIiwiZmlsZSI6Ii4uL0NvQ3JlYXRlLXV1aWQvc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBDb0NyZWF0ZVVVSUQgPSB7XG4gIGF0dHJpYnV0ZTogJ2RhdGEtdXVpZCcsXG5cbiAgaW5pdDogZnVuY3Rpb24oY29udGFpbmVyKSB7XG4gICAgXG4gICAgY29uc3QgX19jb250YWluZXIgPSBjb250YWluZXIgfHwgZG9jdW1lbnRcbiAgICBpZiAoIV9fY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0XG5cdFx0bGV0IGVsZW1lbnRzID0gX19jb250YWluZXIucXVlcnlTZWxlY3RvckFsbChgWyR7dGhpcy5hdHRyaWJ1dGV9XWApO1xuXHRcdGNvbnN0IHNlbGYgPSB0aGlzO1xuXHRcdGVsZW1lbnRzLmZvckVhY2goZWwgPT4ge1xuXHRcdCAgY29uc3QgbGVuID0gcGFyc2VJbnQoZWwuZ2V0QXR0cmlidXRlKHNlbGYuYXR0cmlidXRlKSkgfHwgMzY7XG5cdFx0ICBjb25zdCB1dWlkID0gc2VsZi5nZW5lcmF0ZUlEKGxlbilcblx0XHQgIGlmIChlbC50YWdOYW1lID09PSBcIklOUFVUXCIgfHwgZWwudGFnTmFtZSA9PT0gXCJURVhUQVJFQVwiKSB7XG4gICAgICAgIGVsLnZhbHVlID0gdXVpZDtcdFx0ICAgIFxuXHRcdCAgfSBlbHNlIHtcblx0XHQgICAgZWwuaW5uZXJIVE1MID0gdXVpZDtcblx0XHQgIH1cblx0XHR9KVxuICB9LFxuICBcbiAgZ2VuZXJhdGVJRDogZnVuY3Rpb24obGVuZ3RoID0gMzYpIHtcbiAgICBsZXQgZCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgIGxldCBkMiA9ICh3aW5kb3cucGVyZm9ybWFuY2UgJiYgd2luZG93LnBlcmZvcm1hbmNlLm5vdyAmJiAod2luZG93LnBlcmZvcm1hbmNlLm5vdygpKjEwMDApKSB8fCAwO1xuICAgIGxldCBwYXR0ZXJuID0gJ3h4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eCc7XG4gICAgXG4gICAgaWYgKGxlbmd0aCA8PSBwYXR0ZXJuLmxlbmd0aCkge1xuICAgICAgcGF0dGVybiA9IHBhdHRlcm4uc3Vic3RyKDAsIGxlbmd0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBhZGRfbGVuID0gbGVuZ3RoIC0gcGF0dGVybi5sZW5ndGg7XG4gICAgICBsZXQgc3ViX3BhdHRlcm4gPSBcIi14eHh5eXh4eFwiO1xuICAgICAgXG4gICAgICBsZXQgZ3JvdXBfbiA9IE1hdGguZmxvb3IoYWRkX2xlbiAvIHN1Yl9wYXR0ZXJuLmxlbmd0aCk7XG4gICAgICBcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZ3JvdXBfbjsgaSsrKSB7XG4gICAgICAgIHBhdHRlcm4gKz0gc3ViX3BhdHRlcm47XG4gICAgICB9XG4gICAgICBcbiAgICAgIGdyb3VwX24gPSBhZGRfbGVuIC0gZ3JvdXBfbiAqIHN1Yl9wYXR0ZXJuLmxlbmd0aDtcbiAgICAgIHBhdHRlcm4gKz0gc3ViX3BhdHRlcm4uc3Vic3RyKDAsIGdyb3VwX24pO1xuICAgIH1cbiAgICBcbiAgICBsZXQgdXVpZCA9IHBhdHRlcm4ucmVwbGFjZSgvW3h5XS9nLCBmdW5jdGlvbihjKSB7XG4gICAgICAgIHZhciByID0gTWF0aC5yYW5kb20oKSAqIDE2O1xuICAgICAgICBpZihkID4gMCl7XG4gICAgICAgICAgICB2YXIgciA9IChkICsgciklMTYgfCAwO1xuICAgICAgICAgICAgZCA9IE1hdGguZmxvb3IoZC8xNik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgciA9IChkMiArIHIpJTE2IHwgMDtcbiAgICAgICAgICAgIGQyID0gTWF0aC5mbG9vcihkMi8xNik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChjPT0neCcgPyByIDogKHImMHg3fDB4OCkpLnRvU3RyaW5nKDE2KTtcbiAgICB9KTtcbiAgICByZXR1cm4gdXVpZDtcbiAgfSxcbiAgXG5cbn1cblxuQ29DcmVhdGVVVUlELmluaXQoKTtcblxuZXhwb3J0IGRlZmF1bHQgQ29DcmVhdGVVVUlEOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../CoCreate-uuid/src/index.js\n')}}]);